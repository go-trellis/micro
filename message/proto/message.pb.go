// Code generated by protoc-gen-go. DO NOT EDIT.
// source: message.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RegisterType int32

const (
	RegisterType_Cache RegisterType = 0
	RegisterType_ETCD  RegisterType = 1
)

var RegisterType_name = map[int32]string{
	0: "Cache",
	1: "ETCD",
}

var RegisterType_value = map[string]int32{
	"Cache": 0,
	"ETCD":  1,
}

func (x RegisterType) String() string {
	return proto.EnumName(RegisterType_name, int32(x))
}

func (RegisterType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{0}
}

type Protocol int32

const (
	Protocol_LOCAL Protocol = 0
	Protocol_HTTP  Protocol = 1
	Protocol_GRPC  Protocol = 2
)

var Protocol_name = map[int32]string{
	0: "LOCAL",
	1: "HTTP",
	2: "GRPC",
}

var Protocol_value = map[string]int32{
	"LOCAL": 0,
	"HTTP":  1,
	"GRPC":  2,
}

func (x Protocol) String() string {
	return proto.EnumName(Protocol_name, int32(x))
}

func (Protocol) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{1}
}

// Service 基础服务信息
type Service struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version              string   `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Service) Reset()         { *m = Service{} }
func (m *Service) String() string { return proto.CompactTextString(m) }
func (*Service) ProtoMessage()    {}
func (*Service) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{0}
}

func (m *Service) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Service.Unmarshal(m, b)
}
func (m *Service) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Service.Marshal(b, m, deterministic)
}
func (m *Service) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Service.Merge(m, src)
}
func (m *Service) XXX_Size() int {
	return xxx_messageInfo_Service.Size(m)
}
func (m *Service) XXX_DiscardUnknown() {
	xxx_messageInfo_Service.DiscardUnknown(m)
}

var xxx_messageInfo_Service proto.InternalMessageInfo

func (m *Service) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Service) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type Payload struct {
	TraceId              string            `protobuf:"bytes,1,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	TraceIp              string            `protobuf:"bytes,2,opt,name=trace_ip,json=traceIp,proto3" json:"trace_ip,omitempty"`
	Id                   string            `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Service              *Service          `protobuf:"bytes,4,opt,name=Service,proto3" json:"Service,omitempty"`
	Topic                string            `protobuf:"bytes,5,opt,name=topic,proto3" json:"topic,omitempty"`
	Header               map[string]string `protobuf:"bytes,6,rep,name=header,proto3" json:"header,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ReqBody              []byte            `protobuf:"bytes,7,opt,name=req_body,json=reqBody,proto3" json:"req_body,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Payload) Reset()         { *m = Payload{} }
func (m *Payload) String() string { return proto.CompactTextString(m) }
func (*Payload) ProtoMessage()    {}
func (*Payload) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{1}
}

func (m *Payload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Payload.Unmarshal(m, b)
}
func (m *Payload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Payload.Marshal(b, m, deterministic)
}
func (m *Payload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Payload.Merge(m, src)
}
func (m *Payload) XXX_Size() int {
	return xxx_messageInfo_Payload.Size(m)
}
func (m *Payload) XXX_DiscardUnknown() {
	xxx_messageInfo_Payload.DiscardUnknown(m)
}

var xxx_messageInfo_Payload proto.InternalMessageInfo

func (m *Payload) GetTraceId() string {
	if m != nil {
		return m.TraceId
	}
	return ""
}

func (m *Payload) GetTraceIp() string {
	if m != nil {
		return m.TraceIp
	}
	return ""
}

func (m *Payload) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Payload) GetService() *Service {
	if m != nil {
		return m.Service
	}
	return nil
}

func (m *Payload) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *Payload) GetHeader() map[string]string {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Payload) GetReqBody() []byte {
	if m != nil {
		return m.ReqBody
	}
	return nil
}

type Callback struct {
	Body                 []byte   `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Callback) Reset()         { *m = Callback{} }
func (m *Callback) String() string { return proto.CompactTextString(m) }
func (*Callback) ProtoMessage()    {}
func (*Callback) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{2}
}

func (m *Callback) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Callback.Unmarshal(m, b)
}
func (m *Callback) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Callback.Marshal(b, m, deterministic)
}
func (m *Callback) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Callback.Merge(m, src)
}
func (m *Callback) XXX_Size() int {
	return xxx_messageInfo_Callback.Size(m)
}
func (m *Callback) XXX_DiscardUnknown() {
	xxx_messageInfo_Callback.DiscardUnknown(m)
}

var xxx_messageInfo_Callback proto.InternalMessageInfo

func (m *Callback) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

func init() {
	proto.RegisterEnum("proto.RegisterType", RegisterType_name, RegisterType_value)
	proto.RegisterEnum("proto.Protocol", Protocol_name, Protocol_value)
	proto.RegisterType((*Service)(nil), "proto.Service")
	proto.RegisterType((*Payload)(nil), "proto.Payload")
	proto.RegisterMapType((map[string]string)(nil), "proto.Payload.HeaderEntry")
	proto.RegisterType((*Callback)(nil), "proto.Callback")
}

func init() { proto.RegisterFile("message.proto", fileDescriptor_33c57e4bae7b9afd) }

var fileDescriptor_33c57e4bae7b9afd = []byte{
	// 359 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0xcf, 0xef, 0x93, 0x40,
	0x10, 0xc5, 0x5d, 0x0a, 0x85, 0xef, 0xb4, 0x56, 0xb2, 0xf1, 0xb0, 0xf6, 0x60, 0x48, 0x3d, 0x88,
	0x3d, 0xf4, 0x80, 0x31, 0xfe, 0xb8, 0x29, 0x36, 0xd6, 0xa4, 0x89, 0x04, 0xb9, 0x37, 0x5b, 0x98,
	0xb4, 0xa4, 0xb4, 0x4b, 0x17, 0x6c, 0xc2, 0x9f, 0xe2, 0x7f, 0x6b, 0x76, 0x59, 0x9a, 0x7a, 0xe2,
	0xbd, 0x99, 0x79, 0xc3, 0x67, 0x16, 0x9e, 0x9f, 0xb1, 0x69, 0xf8, 0x01, 0x57, 0xb5, 0x14, 0xad,
	0xa0, 0x8e, 0xfe, 0x2c, 0x3e, 0x82, 0xfb, 0x1b, 0xe5, 0xad, 0xcc, 0x91, 0x52, 0xb0, 0x2f, 0xfc,
	0x8c, 0x8c, 0x04, 0x24, 0x7c, 0x4a, 0xb5, 0xa6, 0x0c, 0xdc, 0x1b, 0xca, 0xa6, 0x14, 0x17, 0x66,
	0xe9, 0xf2, 0x60, 0x17, 0x7f, 0x2d, 0x70, 0x13, 0xde, 0x55, 0x82, 0x17, 0xf4, 0x15, 0x78, 0xad,
	0xe4, 0x39, 0xee, 0xca, 0xc2, 0xa4, 0x5d, 0xed, 0x7f, 0x3e, 0xb6, 0xea, 0x61, 0x43, 0xdf, 0xaa,
	0xe9, 0x0c, 0xac, 0xb2, 0x60, 0x23, 0x5d, 0xb4, 0xca, 0x82, 0x86, 0x77, 0x14, 0x66, 0x07, 0x24,
	0x9c, 0x44, 0xb3, 0x1e, 0x75, 0x65, 0xaa, 0xe9, 0x9d, 0xf4, 0x25, 0x38, 0xad, 0xa8, 0xcb, 0x9c,
	0x39, 0x3a, 0xdc, 0x1b, 0x1a, 0xc1, 0xf8, 0x88, 0xbc, 0x40, 0xc9, 0xc6, 0xc1, 0x28, 0x9c, 0x44,
	0x73, 0x13, 0x37, 0x94, 0xab, 0x8d, 0x6e, 0xae, 0x2f, 0xad, 0xec, 0x52, 0x33, 0xa9, 0xf0, 0x24,
	0x5e, 0x77, 0x7b, 0x51, 0x74, 0xcc, 0x0d, 0x48, 0x38, 0x4d, 0x5d, 0x89, 0xd7, 0x6f, 0xa2, 0xe8,
	0xe6, 0x9f, 0x61, 0xf2, 0x90, 0xa0, 0x3e, 0x8c, 0x4e, 0xd8, 0x99, 0xf3, 0x94, 0x54, 0x14, 0x37,
	0x5e, 0xfd, 0x41, 0x73, 0x57, 0x6f, 0xbe, 0x58, 0x9f, 0xc8, 0xe2, 0x35, 0x78, 0x31, 0xaf, 0xaa,
	0x3d, 0xcf, 0x4f, 0xea, 0x55, 0xf5, 0x76, 0xa2, 0xb7, 0x6b, 0xbd, 0x7c, 0x03, 0xd3, 0x14, 0x0f,
	0x65, 0xd3, 0xa2, 0xcc, 0xba, 0x1a, 0xe9, 0x13, 0x38, 0x31, 0xcf, 0x8f, 0xe8, 0x3f, 0xa3, 0x1e,
	0xd8, 0xeb, 0x2c, 0xfe, 0xee, 0x93, 0xe5, 0x3b, 0xf0, 0x12, 0xc5, 0x9f, 0x8b, 0x4a, 0x0d, 0x6c,
	0x7f, 0xc5, 0x5f, 0xb7, 0xfd, 0xc0, 0x26, 0xcb, 0x12, 0x9f, 0x28, 0xf5, 0x23, 0x4d, 0x62, 0xdf,
	0x8a, 0x3e, 0x00, 0xa4, 0x49, 0x3c, 0xbc, 0xce, 0x5b, 0xb0, 0xd5, 0xdf, 0xe9, 0xec, 0xff, 0xfb,
	0xe7, 0x2f, 0x8c, 0x1f, 0xd0, 0xf6, 0x63, 0xed, 0xdf, 0xff, 0x0b, 0x00, 0x00, 0xff, 0xff, 0xd8,
	0xd8, 0x81, 0x0e, 0x1a, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RPCServiceClient is the client API for RPCService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCServiceClient interface {
	Call(ctx context.Context, in *Payload, opts ...grpc.CallOption) (*Callback, error)
}

type rPCServiceClient struct {
	cc *grpc.ClientConn
}

func NewRPCServiceClient(cc *grpc.ClientConn) RPCServiceClient {
	return &rPCServiceClient{cc}
}

func (c *rPCServiceClient) Call(ctx context.Context, in *Payload, opts ...grpc.CallOption) (*Callback, error) {
	out := new(Callback)
	err := c.cc.Invoke(ctx, "/proto.RPCService/Call", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCServiceServer is the server API for RPCService service.
type RPCServiceServer interface {
	Call(context.Context, *Payload) (*Callback, error)
}

// UnimplementedRPCServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRPCServiceServer struct {
}

func (*UnimplementedRPCServiceServer) Call(ctx context.Context, req *Payload) (*Callback, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Call not implemented")
}

func RegisterRPCServiceServer(s *grpc.Server, srv RPCServiceServer) {
	s.RegisterService(&_RPCService_serviceDesc, srv)
}

func _RPCService_Call_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Payload)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServiceServer).Call(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.RPCService/Call",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServiceServer).Call(ctx, req.(*Payload))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.RPCService",
	HandlerType: (*RPCServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Call",
			Handler:    _RPCService_Call_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "message.proto",
}
